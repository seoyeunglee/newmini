<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 	
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="snowProject.mapper.EmployeeMapper">

<sql id="employeeBaseColumns">
	EMP_NUM , EMP_ID, EMP_PW, EMP_NAME, EMP_ADDR, EMP_ADDR_DETAIL, EMP_POST,
	EMP_HIRE_DATE, EMP_PHONE, EMP_EMAIL, EMP_JUMIN
</sql>

<insert id="employeeInsert" parameterType="emp" >
	insert into employees( <include refid="employeeBaseColumns" />)
	values( #{empNum},#{empId} ,#{empPw} ,#{empName} ,#{empAddr} 
			,#{empAddrDetail} ,#{empPost} 
			,sysdate ,#{empPhone} ,#{empEmail},#{empJumin})
</insert>

<resultMap type="emp" id="employeeResultMap">
	<id column="emp_num" jdbcType="VARCHAR" property="empNum"/>
	<result column="emp_id" jdbcType="VARCHAR" property="empId"/>
	<result column="emp_pw" jdbcType="VARCHAR" property="empPw"/>
	<result column="emp_name" jdbcType="VARCHAR" property="empName"/>
	<result column="emp_addr" jdbcType="VARCHAR" property="empAddr"/>
	<result column="emp_addr_detail" jdbcType="VARCHAR" property="empAddrDetail"/>
	<result column="emp_post" jdbcType="BIGINT" property="empPost"/>
	<result column="emp_hire_date" jdbcType="DATE" property="empHireDate"/>
	<result column="emp_phone" jdbcType="VARCHAR" property="empPhone"/>
	<result column="emp_email" jdbcType="VARCHAR" property="empEmail"/>
	<result column="emp_jumin" jdbcType="VARCHAR" property="empJumin"/>
</resultMap>

<select id="employeeAllSelect" 
	parameterType="startEndPageDTO" resultMap="employeeResultMap">
	
	select * from (
		select ROW_NUMBER() over (order by emp_num) as rn,
			<include refid="employeeBaseColumns" />
		from employees
		<where>
			<if test="searchWord != null">
				emp_name like '%' || #{searchWord} || '%'
				or emp_id like '%' || #{searchWord} || '%'
				or emp_num like '%' || #{searchWord} || '%'
			</if>
		</where>
		)
	where rn between #{startRow} and #{endRow}
</select>

<select id="employeeCount" parameterType="string" resultType="integer">
	select count(*) from employees
	<if test='searchWord != null'>
		<where>
			emp_name like '%' || #{searchWord} || '%'
			or emp_id like '%' || #{searchWord} || '%'
			or emp_num like '%' || #{searchWord} || '%'
		</where>
	</if> 
</select>

<select id="employeeOneSelect" parameterType="string" resultMap="employeeResultMap">
	select <include refid="employeeBaseColumns" />
	from employees
	where emp_num = #{empNum}
</select>

<update id="employeeUpdate" parameterType="emp">
	update employees
set   EMP_NAME = #{empName}
    , EMP_ADDR =#{empAddr}
    <if test="empAddrDetail != null">
    , EMP_ADDR_detail = #{empAddrDetail}
    </if>
    , EMP_POST =#{empPost}
    , EMP_PHONE = #{empPhone}
    , emp_jumin = #{empJumin}
    , EMP_HIRE_DATE = #{empHireDate}
    , emp_email = #{empEmail}
where EMP_NUM = #{empNum}
</update>

<delete id="employeeDelete" parameterType="string">
	<![CDATA[
		delete from employees where EMP_NUM = #{empNum}
	]]>
</delete>

<select id="getEmpNum" parameterType="string" resultType="string">
	select emp_num from employees
	where emp_id = #{empId}
</select>



</mapper>