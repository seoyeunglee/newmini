<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="snowProject.mapper.MemberMapper">

<sql id="memberNum">
select concat('mem_', nvl(substr(max(member_num),5),100000)+1) from members
</sql>

<insert id="memberInsert" parameterType="memberDTO">
insert into members(MEMBER_NUM, MEMBER_NAME, MEMBER_ID, MEMBER_PW
	                   , MEMBER_ADDR, MEMBER_ADDR_DETAIL, MEMBER_POST
	                   , MEMBER_REGIST, GENDER,MEMBER_PHONE1
	                   <if test="memberPhone2 != null">
	                   , MEMBER_PHONE2
	                   </if>
	                   , MEMBER_EMAIL, MEMBER_BIRTH, MEMBER_POINT)
	values((<include refid="memberNum" />)
		  , #{memberName}, #{memberId}, #{memberPw}
	      ,#{memberAddr},#{memberAddrDetail},#{memberPost} 
	      ,sysdate, #{gender}, #{memberPhone1}
	      <if test="memberPhone2 != null">
	      ,#{memberPhone2}
	      </if>
	      ,#{memberEmail},#{memberBirth},0)
</insert>

<sql id="memberBaseColumns">
MEMBER_NUM, MEMBER_NAME, MEMBER_ID, MEMBER_PW
	, MEMBER_ADDR, MEMBER_ADDR_DETAIL, MEMBER_POST
	, MEMBER_REGIST, GENDER,MEMBER_PHONE1, MEMBER_PHONE2
	, MEMBER_EMAIL, MEMBER_BIRTH, MEMBER_POINT
</sql>

<select id="memberSelectList" resultType="memberDTO" parameterType="startEndPageDTO">
	select *
	from (select row_number() over (order by member_num) as rn
			, <include refid="memberBaseColumns" />
			from members
	<where>
		<if test="searchWord != null">
			member_name like '%'||#{searchWord}||'%'
			or member_id like '%'||#{searchWord}||'%'
			or member_num like '%'||#{searchWord}||'%'
		</if>
	</where>
	)
	where rn between #{startRow} and #{endRow}
</select>

<select id="memberCount" resultType="integer">
	select count(*) from members
</select>

<select id="memberSelectOne" resultType="memberDTO" parameterType="string">
	select <include refid="memberBaseColumns" />
	from members
	where member_num = #{memberNum}
</select>

<select id="memberUpdate" parameterType="memberDTO">
	update members
	<trim prefix="set" suffixOverrides=",">
		member_name = #{memberName},
		member_addr = #{memberAddr},
		<if test="memberAddrDetail == null">
			member_addr_detail = null,
		</if>
		member_post = #{memberPost},
		gender = #{gender},
		member_phone1 = #{memberPhone1},
		member_email = #{memberEmail},
		member_birth = #{memberBirth},
		<choose>
			<when test="memberPhone2 != null">
			member_phone2 = #{memberPhone2},
			</when>
			<when test="memberPhone2 == null">
			member_phone2 = null,
			</when>
		</choose>
	</trim>
	where member_num = #{memberNum}
</select>

<delete id="memberDelete" parameterType="string">
	delete from members
	where member_num = #{memberNum}
</delete>

<update id="memberEmailCheckUpdate" parameterType="string">
	update members
	set member_email_conf = 'Y'
	where memebr_email = #{memberEmail} and member_email_conf is null
</update>

<select id="memberNumSelect" parameterType="string" resultType="string">
	select member_num from members where member_id = #{memberId}
</select>


</mapper>